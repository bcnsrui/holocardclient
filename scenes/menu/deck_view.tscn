[gd_scene load_steps=6 format=3 uid="uid://bv4d6hvpdh0wp"]

[ext_resource type="PackedScene" uid="uid://cdh1c0yenr2w4" path="res://scenes/game/popout_element.tscn" id="1_bekbn"]
[ext_resource type="Texture2D" uid="uid://bnuol0ewqd6p8" path="res://assets/highlights/card_border_highlight_pressed.png" id="3_0o0ea"]
[ext_resource type="PackedScene" uid="uid://bcr5jfstov5er" path="res://scenes/menu/cheer_box.tscn" id="3_6rtgs"]
[ext_resource type="Texture2D" uid="uid://yfm3tk3pgk1i" path="res://assets/highlights/card_border_highlight_selected.png" id="4_kgxms"]

[sub_resource type="GDScript" id="GDScript_o1nbb"]
script/source = "class_name DeckView
extends MarginContainer

signal select_card_types(types)

const PopoutElementScene = preload(\"res://scenes/game/popout_element.tscn\")

@onready var deck_grid = $ScrollContainer/MarginContainer/VBoxContainer/DeckGrid
@onready var oshi_element = $ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/OshiMargin/OshiElement
@onready var cheer_box = $ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/CheerBox
@onready var deck_name_edit = $ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/HBoxContainer/DeckNameEdit
@onready var card_total : Label = $ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/CardLabels/CardCount

var _current_deck = {}

func initialize(deck):
	_current_deck = deck
	# Create the oshi card
	# Initialize the Cheer
	# Create all the cards and set counts
	remove_all_children(deck_grid)

	# Deck name
	deck_name_edit.text = deck[\"deck_name\"]

	# Setup Oshi
	oshi_element.set_card_controls(false, null)
	var oshi_card = CardDatabase.test_create_card(\"id_\" + str(deck[\"oshi\"]), deck[\"oshi\"])
	oshi_element.add_card(oshi_card)
	oshi_card.initialize_graphics()
	oshi_element.position_card()

	# Setup Cheer Deck
	cheer_box.create_groups(deck[\"cheer_deck\"])

	# Setup Deck
	var num_cards = deck[\"deck\"].size()
	add_card_elements(num_cards)
	var elements  = deck_grid.get_children()
	for i in range(num_cards):
		var element = elements[i]
		var card_id = deck[\"deck\"].keys()[i]
		var card_count = deck[\"deck\"][card_id]
		var card = CardDatabase.test_create_card(\"id_\" + str(card_id), card_id)

		element.add_card(card)
		card.initialize_graphics()
		element.set_number_visible(card_count)
		element.set_card_controls(true, change_card_count)

	reposition_cards()
	update_card_total()

func reposition_cards():
	for element in deck_grid.get_children():
		element.position_card()

func change_card_count(element, amount):
	var current_num = element.get_number()
	var definition_id = element.get_definition_id()
	var card = CardDatabase.get_card(definition_id)
	var max_allowed = Enums.MAX_CARD_COPIES
	if \"special_deck_limit\" in card:
		max_allowed = card[\"special_deck_limit\"]
	current_num += amount
	if current_num == 0:
		# Remove the card from the deck
		_current_deck[\"deck\"].erase(definition_id)
		element.visible = false
		deck_grid.remove_child(element)
		element.queue_free()
		reposition_cards()
	else:
		if current_num > max_allowed:
			current_num = max_allowed
		_current_deck[\"deck\"][definition_id] = current_num
		element.set_number_visible(current_num)
	update_card_total()

func update_card_total():
	var total = 0
	for child in deck_grid.get_children():
		total += child.get_number()
	card_total.text = str(total)
	if total != Enums.DECK_SIZE:
		card_total.modulate = Color(1, 0, 0)
	else:
		card_total.modulate = Color(1, 1, 1)

func _on_cheer_box_cheer_changed(cheer_id : String, _color: String, new_count) -> void:
	if new_count == 0:
		# Remove the cheer from the deck
		_current_deck[\"cheer_deck\"].erase(cheer_id)
	else:
		# Update the count
		_current_deck[\"cheer_deck\"][cheer_id] = new_count


func _on_deck_name_edit_text_changed(new_text: String) -> void:
	if new_text:
		name = new_text

func _on_oshi_button_pressed() -> void:
	select_card_types.emit([\"oshi\"])
"

[node name="DeckView" type="MarginContainer"]
custom_minimum_size = Vector2(850, 600)
script = SubResource("GDScript_o1nbb")
metadata/_tab_index = 0

[node name="ScrollContainer" type="ScrollContainer" parent="."]
layout_mode = 2

[node name="MarginContainer" type="MarginContainer" parent="ScrollContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="ScrollContainer/MarginContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="ScrollContainer/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="OshiMargin" type="MarginContainer" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2

[node name="OshiElement" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/OshiMargin" instance=ExtResource("1_bekbn")]
layout_mode = 2

[node name="OshiButton" type="TextureButton" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/OshiMargin"]
layout_mode = 2
texture_pressed = ExtResource("3_0o0ea")
texture_hover = ExtResource("4_kgxms")
ignore_texture_size = true
stretch_mode = 0

[node name="CheerBox" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer" instance=ExtResource("3_6rtgs")]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="HBoxContainer2" type="HBoxContainer" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
alignment = 2

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "Deck Name"

[node name="HBoxContainer" type="HBoxContainer" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
alignment = 2

[node name="DeckNameEdit" type="LineEdit" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 32
placeholder_text = "Deck Name"
alignment = 2
max_length = 20

[node name="CardLabels" type="HBoxContainer" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 10
size_flags_vertical = 10
alignment = 2

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/CardLabels"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "Cards:"

[node name="CardCount" type="Label" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/CardLabels"]
custom_minimum_size = Vector2(40, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "3"
horizontal_alignment = 2

[node name="Label4" type="Label" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/CardLabels"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "/"

[node name="Label3" type="Label" parent="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/CardLabels"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "50"

[node name="DeckGrid" type="GridContainer" parent="ScrollContainer/MarginContainer/VBoxContainer"]
custom_minimum_size = Vector2(630, 0)
layout_mode = 2
columns = 5

[node name="PopoutElement" parent="ScrollContainer/MarginContainer/VBoxContainer/DeckGrid" instance=ExtResource("1_bekbn")]
layout_mode = 2

[node name="PopoutElement2" parent="ScrollContainer/MarginContainer/VBoxContainer/DeckGrid" instance=ExtResource("1_bekbn")]
layout_mode = 2

[node name="PopoutElement3" parent="ScrollContainer/MarginContainer/VBoxContainer/DeckGrid" instance=ExtResource("1_bekbn")]
layout_mode = 2

[node name="PopoutElement4" parent="ScrollContainer/MarginContainer/VBoxContainer/DeckGrid" instance=ExtResource("1_bekbn")]
layout_mode = 2

[node name="PopoutElement5" parent="ScrollContainer/MarginContainer/VBoxContainer/DeckGrid" instance=ExtResource("1_bekbn")]
layout_mode = 2

[node name="PopoutElement6" parent="ScrollContainer/MarginContainer/VBoxContainer/DeckGrid" instance=ExtResource("1_bekbn")]
layout_mode = 2

[connection signal="pressed" from="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/OshiMargin/OshiButton" to="." method="_on_oshi_button_pressed"]
[connection signal="cheer_changed" from="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/CheerBox" to="." method="_on_cheer_box_cheer_changed"]
[connection signal="text_changed" from="ScrollContainer/MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/HBoxContainer/DeckNameEdit" to="." method="_on_deck_name_edit_text_changed"]
